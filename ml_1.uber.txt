import pandas as pd
import numpy as np
from sklearn.preprocessing import StandardScaler
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv("uber.csv")

df.head()

df = df.drop(['Unnamed: 0','key','pickup_datetime'], axis=1)

df.isnull().sum()

df = df.dropna()

df.isnull().sum()

plt.figure(figsize=(10,6))
sns.boxplot(data=df) 
plt.show()

for col in df.columns:
    Q1 = df[col].quantile(0.25)  
    Q3 = df[col].quantile(0.75)  
    IQR = Q3 - Q1 
    lower_bound = Q1 - 1.5 * IQR
    upper_bound = Q3 + 1.5 * IQR
    df = df[(df[col] >= lower_bound) & (df[col] <= upper_bound)]

scaler = StandardScaler()
scaled_data = scaler.fit_transform(df)

scaled_data

corr = df.corr()
sns.heatmap(corr,annot = True)
plt.show()

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
X = df[['pickup_longitude','pickup_latitude','dropoff_longitude','dropoff_latitude','passenger_count']]
Y = df['fare_amount']
x_train,x_test,y_train,y_test = train_test_split(X,Y,test_size = 0.3)

model = LinearRegression()
model.fit(x_train,y_train)
y_pred = model.predict(x_test)

y_pred

r2score = r2_score(y_test,y_pred)
print("R2 Score: ", r2score)
rmse = np.sqrt(mean_squared_error(y_test,y_pred))
print("RMSE: ",rmse)

from sklearn.ensemble import RandomForestRegressor
model1 = RandomForestRegressor()
model1.fit(x_train,y_train)

y_pred = model1.predict(x_test)
y_pred

r2score = r2_score(y_test,y_pred)
print("R2 Score: ", r2score)
rmse = np.sqrt(mean_squared_error(y_test,y_pred))
print("RMSE: ",rmse)


