import pandas as pd
import numpy as np
from sklearn.preprocessing import StandardScaler, LabelEncoder
from sklearn.model_selection import train_test_split

df = pd.read_csv('Churn_Modelling.csv')

df.head()

df = df.drop(['RowNumber', 'CustomerId', 'Surname'], axis=1)

label_encoder = LabelEncoder()
df['Gender'] = label_encoder.fit_transform(df['Gender'])  
df['Geography'] = label_encoder.fit_transform(df['Geography'])

df

X = df.drop('Exited', axis = 1)
Y = df['Exited']

x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size = 0.2)

scaler = StandardScaler()
X_train = scaler.fit_transform(x_train)
X_test = scaler.transform(x_test)

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Dropout

model = Sequential()
model.add(Dense(activation='relu', units=32, input_dim=X_train.shape[1]))
model.add(Dropout(0.5))  
model.add(Dense(activation='relu', units=16))  
model.add(Dense(activation='sigmoid', units=1))
model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

model.fit(X_train, y_train, batch_size=32, epochs=50)

y_pred = model.predict(X_test)
y_pred = (y_pred > 0.5) 
y_pred

from sklearn.metrics import accuracy_score, confusion_matrix
accuracy = accuracy_score(y_test, y_pred)
conf_matrix = confusion_matrix(y_test, y_pred)
print("Accuracy Score:", accuracy)
print("Confusion Matrix:\n", conf_matrix)